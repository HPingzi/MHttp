apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = PROJ_VERSION
def siteUrl = PROJ_WEBSITEURL                   // #CONFIG# // project homepage
def gitUrl = PROJ_VCSURL                    // #CONFIG# // project git
group = PROJ_GROUP

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name PROJ_NAME                                 // #CONFIG# // project title
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id DEVELOPER_ID                                       // #CONFIG# // your user id (you can write your nickname)
                        name DEVELOPER_NAME                                      // #CONFIG# // your user name
                        email DEVELOPER_EMAIL                              // #CONFIG# // your email
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = hasProperty("bintrayUser")?getProperty("bintrayUser"):getProperty("BINTRAY_USER")
    key = hasProperty("bintrayKey")?getProperty("bintrayKey"):getProperty("BINTRAY_KEY")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = PROJ_NAME                                                // #CONFIG# project name in jcenter
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}


/**
 * make jar
 *
 * @param target    生成jar包的文件名
 * @param classDir  class文件所在的文件夹
 */
def makeJar(String target,String classDir){
    exec{
        executable "jar"   //调用jar
        args "cvf",target
        args "-C", classDir
        args "","."
    }
}

/**
 * 依赖build(build是一个自带的task)
 */
task buildLib(dependsOn:['build'])<< {
    makeJar("mhttpadapter.jar","build/intermediates/classes/release")
}

task clearJar(type: Delete) {
    delete 'build/outputs/okhttputils.jar'
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/outputs/')
    include('classes.jar')
    rename ('classes.jar', 'mhttpadapter.jar')
}

makeJar.dependsOn(clearJar, build)